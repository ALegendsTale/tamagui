{"pageProps":{"frontmatter":{"title":"Benchmarks","description":"Performance tests and comparisons.","slug":"benchmarks","readingTime":{"text":"2 min read","minutes":1.89,"time":113400,"words":378}},"code":"var Component=(()=>{var d=Object.create;var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var l=t=>o(t,\"__esModule\",{value:!0});var v=(t,a)=>()=>(a||t((a={exports:{}}).exports,a),a.exports),f=(t,a)=>{l(t);for(var i in a)o(t,i,{get:a[i],enumerable:!0})},b=(t,a,i)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let n of u(a))!y.call(t,n)&&n!==\"default\"&&o(t,n,{get:()=>a[n],enumerable:!(i=p(a,n))||i.enumerable});return t},w=t=>b(l(o(t!=null?d(g(t)):{},\"default\",t&&t.__esModule&&\"default\"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var c=v((D,m)=>{m.exports=_jsx_runtime});var S={};f(S,{default:()=>x,frontmatter:()=>k});var e=w(c()),k={title:\"Benchmarks\",description:\"Performance tests and comparisons.\"};function T(t={}){let{wrapper:a}=t.components||{};return a?(0,e.jsx)(a,Object.assign({},t,{children:(0,e.jsx)(i,{})})):i();function i(){let n=Object.assign({p:\"p\",a:\"a\",strong:\"strong\",em:\"em\",h3:\"h3\",blockquote:\"blockquote\",hr:\"hr\",h2:\"h2\"},t.components),{Notice:s,BenchmarkChart:r}=n;return r||h(\"BenchmarkChart\",!0),s||h(\"Notice\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.p,{children:[\"We've forked a common test suite for styling libraries. All tests were run in a production environment on a Macbook M1 Pro (2021). The \",(0,e.jsx)(n.a,{href:\"https://github.com/tamagui/tamagui/tree/master/packages/benchmarks\",children:\"benchmarks\"}),\" are open-source.\"]}),`\n`,(0,e.jsx)(s,{children:(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Note\"}),\": Some of these libraries are \",(0,e.jsx)(n.strong,{children:\"web-only\"}),\", which \",(0,e.jsx)(n.em,{children:\"should\"}),` have a big advantage as Tamagui\nsupports the richer and larger React Native APIs. Still, we think Tamagui compares well.`]})}),`\n`,(0,e.jsx)(n.p,{children:\"Note, the last two tests are not really testing styling performance as much as the internals of the component. We think they don't represent a typical application, but we've left them in for completeness.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Tamagui truly shines with inline styles, themes and media queries, which are key to sharing between native/web. The plan is to add one more more realistic and mixed benchmark which really tests a typical complex app page. We think this test will be even more favorable for Tamagui.\"}),`\n`,(0,e.jsx)(n.h3,{id:\"simple-component\",children:\"Simple component\"}),`\n`,(0,e.jsx)(n.p,{children:\"Timing rendering a simple custom component.\"}),`\n`,(0,e.jsx)(r,{data:[{name:\"Tamagui\",value:.018},{name:\"react-native-web\",value:.057},{name:\"Dripsy\",value:.042},{name:\"Stitches\",value:.023},{name:\"Emotion\",value:.041}]}),`\n`,(0,e.jsx)(n.h3,{id:\"updating-variants\",children:\"Updating variants\"}),`\n`,(0,e.jsx)(n.p,{children:\"Changing variants is fast at runtime, and even faster when compiled:\"}),`\n`,(0,e.jsx)(r,{data:[{name:\"Tamagui\",value:.026},{name:\"react-native-web\",value:.063},{name:\"Dripsy\",value:.108},{name:\"Stitches\",value:.037},{name:\"Emotion\",value:.069},{name:\"styled-components\",value:.081}]}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Note: Since styled-components and Emotion don't offer a first-class variant API, this was done via prop interpolation.\"}),`\n`]}),`\n`,(0,e.jsx)(n.h3,{id:\"updating-inline-styles\",children:\"Updating inline styles\"}),`\n`,(0,e.jsx)(n.p,{children:\"Tamagui has a big advantage for inline styles, it's the only library to compile them.\"}),`\n`,(0,e.jsx)(r,{data:[{name:\"Tamagui\",value:.025},{name:\"react-native-web\",value:.06},{name:\"Dripsy\",value:.266},{name:\"Stitches\",value:.027},{name:\"Emotion\",value:.047}]}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.h3,{id:\"dynamic-styles-no-compilation\",children:\"Dynamic styles (no compilation)\"}),`\n`,(0,e.jsx)(n.p,{children:\"Tamagui components are far more feature-rich than other styling libraries, so in the worst case where every component isn't extracted, you get middle-of-the-road performance. Basically, the next two tests represent extremely rare cases.\"}),`\n`,(0,e.jsx)(r,{data:[{name:\"Tamagui\",value:17.25},{name:\"Dripsy\",value:57.5},{name:\"Stitches\",value:14.5},{name:\"Emotion\",value:49.01}]}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Note: This test was taken from the \",(0,e.jsx)(n.a,{href:\"https://github.com/styled-components/styled-components/tree/main/packages/benchmarks\",children:\"styled-components benchmarks\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h3,{id:\"mounting-deep-tree\",children:\"Mounting deep tree\"}),`\n`,(0,e.jsx)(n.p,{children:\"In this test, we mount a tree with many nested nodes.\"}),`\n`,(0,e.jsx)(r,{data:[{name:\"Tamagui\",value:11.92},{name:\"Dripsy\",value:44.43},{name:\"Stitches\",value:8.32},{name:\"Emotion\",value:42.49},{name:\"styled-components\",value:51.4}]}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Note: This test was taken from the \",(0,e.jsx)(n.a,{href:\"https://github.com/styled-components/styled-components/tree/main/packages/benchmarks\",children:\"styled-components benchmarks\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{id:\"summary\",children:\"Summary\"}),`\n`,(0,e.jsx)(n.p,{children:\"Tamagui greatly increases render performance and compares well to the best web-only style libraries. We plan to add comparisons to other cross-platform style libraries in the future as we should fare well against them.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Tamagui will also dramatically outperform for both media queries and themes, which we will publish in upcoming tests.\"})]})}}var x=T;function h(t,a){throw new Error(\"Expected \"+(a?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return S;})();\n;return Component;"},"__N_SSG":true}