{"pageProps":{"frontmatter":{"title":"Introducing Tamagui","publishedAt":"2020-09-01","description":"A better base layer for building apps that span across many platforms","by":"nate","slug":"introducing-tamagui","readingTime":{"text":"3 min read","minutes":2.325,"time":139500,"words":465}},"code":"var Component=(()=>{var d=Object.create;var o=Object.defineProperty;var c=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var r=n=>o(n,\"__esModule\",{value:!0});var g=(n,i)=>()=>(i||n((i={exports:{}}).exports,i),i.exports),f=(n,i)=>{r(n);for(var a in i)o(n,a,{get:i[a],enumerable:!0})},b=(n,i,a)=>{if(i&&typeof i==\"object\"||typeof i==\"function\")for(let t of m(i))!u.call(n,t)&&t!==\"default\"&&o(n,t,{get:()=>i[t],enumerable:!(a=c(i,t))||a.enumerable});return n},w=n=>b(r(o(n!=null?d(p(n)):{},\"default\",n&&n.__esModule&&\"default\"in n?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n);var l=g((S,h)=>{h.exports=_jsx_runtime});var k={};f(k,{default:()=>v});var e=w(l());function y(n={}){let{wrapper:i}=n.components||{};return i?(0,e.jsx)(i,Object.assign({},n,{children:(0,e.jsx)(a,{})})):a();function a(){let t=Object.assign({p:\"p\",strong:\"strong\",ul:\"ul\",li:\"li\",em:\"em\",hr:\"hr\",a:\"a\"},n.components),{Image:s}=t;return s||x(\"Image\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(s,{title:\"Layout tools image\",src:\"/blog/introducing-tamagui/hero.png\",size:\"hero\"}),`\n`,(0,e.jsx)(t.p,{children:\"Tamagui takes the next steps towards truly universal styling for React apps.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"It was born to allow us to \",(0,e.jsx)(t.strong,{children:\"share more code between native and web\"}),\", and do so with all the modern styling features we've grown love from themes to variants to typed inline styles.\"]}),`\n`,(0,e.jsx)(t.p,{children:\"We love inline styles, and being able to share components across platforms. But today, both have problems: they sacrifice performance, oftentimes dramatically so. On native, it's due to inline or dynamic styling requiring a lot of extra JavaScript at runtime. On web, it's the same, but even worse as you aren't using the platform-native primitives like CSS media queries and themes.\"}),`\n`,(0,e.jsx)(t.p,{children:\"Tamagui attempts to solve these problems. It's three things:\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"A \",(0,e.jsx)(t.strong,{children:\"design system library\"}),\" that provides fast primitives for inline styles \",(0,e.jsx)(t.em,{children:\"as well as\"}),\" hooks - even for media queries and themes - that work the same on native as they do web.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"A \",(0,e.jsx)(t.strong,{children:\"UI kit\"}),\" that builds on that library with easy to use universal components.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"An \",(0,e.jsx)(t.strong,{children:\"optimizing compiler\"}),\" that outputs faster code, tailored to each platform.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.p,{children:\"We built Tamagui hand-in-hand with a large app that needed to have a great experience on both web and native. As a small team, being able to share as much code as possible between the platforms has many upsides.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Tamagui began as a fork of \",(0,e.jsx)(t.a,{href:\"https://github.com/jsxstyle/jsxstyle\",children:\"JSXStyle\"}),\", rebuilt to support \",(0,e.jsx)(t.a,{href:\"https://necolas.github.io/react-native-web/\",children:\"React Native Web\"}),\". We added basic support for \",(0,e.jsx)(t.a,{href:\"/docs/core/useMedia\",children:\"useMedia\"}),\" first, which let us share responsive components between web and native. Eventually, \",(0,e.jsx)(t.a,{href:\"/docs/core/useMedia\",children:\"useTheme\"}),\" was added when we added a dark mode.\"]}),`\n`,(0,e.jsx)(t.p,{children:\"With enough development, we decided it was worth sharing it with the world.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"There was only one problem: design systems had gotten \",(0,e.jsx)(t.em,{children:\"really good\"}),\" in the last few years \\u2014 better syntax, themes, variants, tokens, and shorthands. We'd built UI kits with these features in the past, but JSXStyle, and therefore Tamagui, didn't support them.\"]}),`\n`,(0,e.jsx)(t.p,{children:\"So, over the last month, I set out to modernize Tamagui. And I'm happy to announce it today in alpha, fully supporting all of the goodies of modern design systems, and more.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"A big thanks is owed to the creators of both JSXStyle (for the compiler) and \",(0,e.jsx)(t.a,{href:\"https://stitches.dev\",children:\"Stitches\"}),\" (for inspiration on tokens and variants, and the bones of this website).\"]}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.p,{children:\"Tamagui is an ambitious project and still early in its life, but we've been using it for a couple years now and feel its ready to get out into the world.\"}),`\n`,(0,e.jsx)(t.p,{children:\"We look forward to working with the community and helping it grow.\"})]})}}var v=y;function x(n,i){throw new Error(\"Expected \"+(i?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return k;})();\n;return Component;","relatedPosts":null},"__N_SSG":true}