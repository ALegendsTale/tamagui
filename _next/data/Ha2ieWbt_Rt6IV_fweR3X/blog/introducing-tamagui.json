{"pageProps":{"frontmatter":{"title":"Introducing Tamagui","publishedAt":"2021-09-22","description":"A better base layer for building cross-platform apps","by":"nate","slug":"introducing-tamagui","readingTime":{"text":"4 min read","minutes":3.215,"time":192900,"words":643}},"code":"var Component=(()=>{var u=Object.create;var s=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var h=i=>s(i,\"__esModule\",{value:!0});var f=(i,n)=>()=>(n||i((n={exports:{}}).exports,n),n.exports),y=(i,n)=>{h(i);for(var a in n)s(i,a,{get:n[a],enumerable:!0})},b=(i,n,a)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let t of m(n))!w.call(i,t)&&t!==\"default\"&&s(i,t,{get:()=>n[t],enumerable:!(a=p(n,t))||a.enumerable});return i},v=i=>b(h(s(i!=null?u(g(i)):{},\"default\",i&&i.__esModule&&\"default\"in i?{get:()=>i.default,enumerable:!0}:{value:i,enumerable:!0})),i);var l=f((I,d)=>{d.exports=_jsx_runtime});var j={};y(j,{default:()=>S,frontmatter:()=>k});var e=v(l()),k={title:\"Introducing Tamagui\",publishedAt:\"2021-09-22\",description:\"A better base layer for building cross-platform apps\",by:\"nate\"};function x(i={}){let{wrapper:n}=i.components||{};return n?(0,e.jsx)(n,Object.assign({},i,{children:(0,e.jsx)(a,{})})):a();function a(){let t=Object.assign({p:\"p\",strong:\"strong\",a:\"a\",h3:\"h3\",code:\"code\",hr:\"hr\",h2:\"h2\",em:\"em\"},i.components),{Notice:r,Image:o}=t;return o||c(\"Image\",!0),r||c(\"Notice\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(r,{children:\"Tamagui is in alpha - we'd love it if you tried it out and gave us feedback\"}),`\n`,(0,e.jsx)(o,{title:\"Layout tools image\",src:\"/blog/introducing-tamagui/hero.png\",size:\"hero\"}),`\n`,(0,e.jsx)(t.p,{children:\"Tamagui takes the next steps towards truly universal styling for React apps.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"It was born to allow \",(0,e.jsx)(t.strong,{children:\"sharing more code between native and web components\"}),\" \\u2014 with all the \",(0,e.jsx)(t.a,{href:\"/docs/intro/introduction\",children:\"modern styling features we've grown love\"}),\".\"]}),`\n`,(0,e.jsx)(t.p,{children:\"Until today, sharing code between native and web has had some big downsides, especially with inline styling, responsive styling and themes.\"}),`\n`,(0,e.jsx)(t.p,{children:\"The biggest downside is performance. All of the above require time and memory-hungry operations in JavaScript \\u2014 on the web, especially, it runs a lot of JS on the same thread as your layout. This causes issues with jank and limitations rendering deeper trees.\"}),`\n`,(0,e.jsx)(t.p,{children:\"Tamagui tackles these problems with an optimizing compiler. It enables:\"}),`\n`,(0,e.jsx)(t.h3,{id:\"inline-styles-without-overhead\",children:\"Inline styles without overhead\"}),`\n`,(0,e.jsx)(t.p,{children:\"An optimizing compiler extracts most styles you write, even if they're inside conditional ternaries or spread objects. It pulls them out of your JS bundle and into atomic CSS.\"}),`\n`,(0,e.jsx)(t.h3,{id:\"fast-responsive-styles\",children:\"Fast responsive styles\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Use hooks and inline responsive styling props without worry, again even with ternaries or other logical operations interspersed, and get clean CSS media queries extracted. On native, your render function will have less work while still allowing you to enjoy the terser style syntax and \",(0,e.jsx)(t.code,{children:\"useMedia\"}),\" hook.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"native-themes\",children:\"Native themes\"}),`\n`,(0,e.jsx)(t.p,{children:\"Use powerful themes that extract on the web to CSS variables, leaving your tree clear of large amounts of objects.\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h2,{id:\"what-is-tamagui\",children:\"What is Tamagui\"}),`\n`,(0,e.jsx)(t.p,{children:\"Tamagui is three things:\"}),`\n`,(0,e.jsx)(t.h3,{id:\"core-create-your-design-system\",children:\"Core: Create your Design System\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.a,{href:\"/docs/core/styled\",children:\"@tamagui/core\"}),\" provides fast primitives for inline styles \",(0,e.jsx)(t.em,{children:\"as well as\"}),\" hooks - even for media queries and themes - that work the same on native as they do web.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"tamagui-universal-ui-kit\",children:\"Tamagui: Universal UI Kit\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.a,{href:\"/docs/components/stacks\",children:\"tamagui\"}),\" is a batteries-included UI Kit that builds on core with easy-to-use universal components.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"static-optimizing-compiler\",children:\"Static: Optimizing compiler\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"@tamagui/static\"}),\" works with both of the above (with webpack and babel). It outputs faster code, flattens your trees, and tunes your styles perfectly to each platform.\"]}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h2,{id:\"what-makes-it-alpha\",children:\"What makes it alpha\"}),`\n`,(0,e.jsx)(t.p,{children:\"We've just finished upgrading many pieces of Tamagui, so some of the newer features are still settling. On native, we need to iron out a few of those features a bit more.\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h2,{id:\"history\",children:\"History\"}),`\n`,(0,e.jsx)(t.p,{children:\"We're building Tamagui hand-in-hand with an app that needs a great UX on web and native. As a small team, being able to share as much code as possible between the platforms has many upsides.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Tamagui began as a fork of \",(0,e.jsx)(t.a,{href:\"https://github.com/jsxstyle/jsxstyle\",children:\"JSXStyle\"}),\", rebuilt to support \",(0,e.jsx)(t.a,{href:\"https://necolas.github.io/react-native-web/\",children:\"React Native Web\"}),\". We added basic support for \",(0,e.jsx)(t.a,{href:\"/docs/core/useMedia\",children:\"useMedia\"}),\" first, which let us share responsive components between web and native. Eventually, \",(0,e.jsx)(t.a,{href:\"/docs/core/useMedia\",children:\"useTheme\"}),\" was added when we added a dark mode.\"]}),`\n`,(0,e.jsx)(t.p,{children:\"With enough development, we decided it was worth sharing it with the world.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"There was only one problem: design systems have gotten \",(0,e.jsx)(t.em,{children:\"really good\"}),\" in the last few years with syntax, themes, variants, tokens, and shorthands. We'd built UI kits with these features before, but since JSXStyle hadn't supported them, Tamagui didn't either.\"]}),`\n`,(0,e.jsx)(t.p,{children:\"So, over the last months I set out to modernize Tamagui, and I'm happy to say that as of today it's ready for wider release.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"A big thanks is owed to the creators of both JSXStyle (for the initial compiler) and \",(0,e.jsx)(t.a,{href:\"https://stitches.dev\",children:\"Stitches\"}),\" (for theme inspiration, and the bones of this website).\"]}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h2,{id:\"going-forward\",children:\"Going forward\"}),`\n`,(0,e.jsx)(t.p,{children:\"Tamagui is an ambitious project and still early in its life, but we've been using it for a couple years now and feel its ready to get out into the world.\"}),`\n`,(0,e.jsx)(t.p,{children:\"We look forward to working with the community and helping it grow.\"})]})}}var S=x;function c(i,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+i+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return j;})();\n;return Component;","relatedPosts":null},"__N_SSG":true}