{"pageProps":{"frontmatter":{"title":"Benchmarks","description":"Performance tests and comparisons.","slug":"benchmarks","readingTime":{"text":"2 min read","minutes":1.755,"time":105300,"words":351}},"code":"var Component=(()=>{var p=Object.create;var s=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var m=a=>s(a,\"__esModule\",{value:!0});var b=(a,t)=>()=>(t||a((t={exports:{}}).exports,t),t.exports),f=(a,t)=>{for(var i in t)s(a,i,{get:t[i],enumerable:!0})},l=(a,t,i,n)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let r of v(t))!y.call(a,r)&&(i||r!==\"default\")&&s(a,r,{get:()=>t[r],enumerable:!(n=u(t,r))||n.enumerable});return a},w=(a,t)=>l(m(s(a!=null?p(g(a)):{},\"default\",!t&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),k=(a=>(t,i)=>a&&a.get(t)||(i=l(m({}),t,1),a&&a.set(t,i),i))(typeof WeakMap!=\"undefined\"?new WeakMap:0);var h=b((C,c)=>{c.exports=_jsx_runtime});var S={};f(S,{default:()=>N,frontmatter:()=>x});var e=w(h()),x={title:\"Benchmarks\",description:\"Performance tests and comparisons.\"};function T(a={}){let{wrapper:t}=a.components||{};return t?(0,e.jsx)(t,Object.assign({},a,{children:(0,e.jsx)(i,{})})):i();function i(){let n=Object.assign({p:\"p\",a:\"a\",strong:\"strong\",h3:\"h3\",blockquote:\"blockquote\",hr:\"hr\",h2:\"h2\"},a.components),{Notice:r,BenchmarkChart:o}=n;return o||d(\"BenchmarkChart\",!0),r||d(\"Notice\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.p,{children:[\"We've forked a common test suite for styling libraries. All tests were run in a production environment on a Macbook M1 Pro (2021). The \",(0,e.jsx)(n.a,{href:\"https://github.com/tamagui/tamagui/tree/master/packages/benchmarks\",children:\"benchmarks\"}),\" are open-source.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Tamagui truly shines with inline styles, themes and media queries, which are key to sharing between native/web, but these tests don't show much of that. The plan is to add one more more realistic and mixed benchmark which really tests a typical complex app page. We think this test will be even more favorable for Tamagui.\"}),`\n`,(0,e.jsx)(r,{children:(0,e.jsx)(n.p,{children:`Like all benchmarks, these are micro and may have bad performance due to errors on our part. We\nwelcome any improvements to other library implementations.`})}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Legend:\"}),\" RNW = react-native-web, SC = styled-components\"]}),`\n`,(0,e.jsx)(n.h3,{id:\"simple-component\",children:\"Simple component\"}),`\n`,(0,e.jsx)(n.p,{children:\"Timing rendering a simple custom component.\"}),`\n`,(0,e.jsx)(o,{data:[{name:\"Tamagui\",value:.018},{name:\"RNW\",value:.057},{name:\"Dripsy\",value:.042},{name:\"NativeBase\",value:.67},{name:\"Stitches\",value:.023},{name:\"Emotion\",value:.041}]}),`\n`,(0,e.jsx)(n.h3,{id:\"updating-variants\",children:\"Updating variants\"}),`\n`,(0,e.jsx)(n.p,{children:\"Changing variants is fast at runtime, and even faster when compiled:\"}),`\n`,(0,e.jsx)(o,{data:[{name:\"Tamagui\",value:.02},{name:\"RNW\",value:.063},{name:\"Dripsy\",value:.108},{name:\"NativeBase\",value:.73},{name:\"Stitches\",value:.037},{name:\"Emotion\",value:.069},{name:\"SC\",value:.081}]}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Since styled-components and Emotion don't offer a first-class variant API, this was done via prop interpolation.\"}),`\n`]}),`\n`,(0,e.jsx)(n.h3,{id:\"updating-inline-styles\",children:\"Updating inline styles\"}),`\n`,(0,e.jsx)(n.p,{children:\"Tamagui has a big advantage for inline styles, it's the only library to compile them and flatten the tree.\"}),`\n`,(0,e.jsx)(o,{data:[{name:\"Tamagui\",value:.025},{name:\"RNW\",value:.06},{name:\"Dripsy\",value:.266},{name:\"NativeBase\",value:.8},{name:\"Stitches\",value:.027},{name:\"Emotion\",value:.047}]}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.h3,{id:\"dynamic-styles-no-compilation\",children:\"Dynamic styles (no compilation)\"}),`\n`,(0,e.jsx)(r,{children:(0,e.jsx)(n.p,{children:`React Native compatible components are far more feature-rich than web-only, and these next two\ntests show a really extreme case where nothing can be optimized. We left them in to be up-front,\nbut don't think they represent anywhere near a common use case.`})}),`\n`,(0,e.jsx)(o,{data:[{name:\"Tamagui\",value:31},{name:\"Dripsy\",value:57.5},{name:\"Stitches\",value:14.5},{name:\"Emotion\",value:49.01}]}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Note: This test was taken from the \",(0,e.jsx)(n.a,{href:\"https://github.com/styled-components/styled-components/tree/main/packages/benchmarks\",children:\"styled-components benchmarks\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h3,{id:\"mounting-deep-tree\",children:\"Mounting deep tree\"}),`\n`,(0,e.jsx)(n.p,{children:\"In this test, we mount a tree with many nested nodes.\"}),`\n`,(0,e.jsx)(o,{data:[{name:\"Tamagui\",value:18.61},{name:\"Dripsy\",value:44.43},{name:\"Stitches\",value:8.32},{name:\"Emotion\",value:42.49},{name:\"SC\",value:51.4}]}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Note: This test was taken from the \",(0,e.jsx)(n.a,{href:\"https://github.com/styled-components/styled-components/tree/main/packages/benchmarks\",children:\"styled-components benchmarks\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{id:\"summary\",children:\"Summary\"}),`\n`,(0,e.jsx)(n.p,{children:\"Tamagui greatly increases render performance and compares well to even the fastest web-only style libraries.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Tamagui should dramatically outperform other libraries for both media queries and themes, which we will publish in upcoming tests.\"})]})}}var N=T;function d(a,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return k(S);})();\n;return Component;"},"__N_SSG":true}