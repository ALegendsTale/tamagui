{"pageProps":{"frontmatter":{"title":"Benchmarks","description":"Performance tests and comparisons.","slug":"benchmarks","readingTime":{"text":"2 min read","minutes":1.625,"time":97500,"words":325}},"code":"var Component=(()=>{var p=Object.create;var s=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var b=(t,a)=>()=>(a||t((a={exports:{}}).exports,a),a.exports),y=(t,a)=>{for(var i in a)s(t,i,{get:a[i],enumerable:!0})},l=(t,a,i,n)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let r of g(a))!v.call(t,r)&&r!==i&&s(t,r,{get:()=>a[r],enumerable:!(n=u(a,r))||n.enumerable});return t};var k=(t,a,i)=>(i=t!=null?p(f(t)):{},l(a||!t||!t.__esModule?s(i,\"default\",{value:t,enumerable:!0}):i,t)),w=t=>l(s({},\"__esModule\",{value:!0}),t);var d=b((j,h)=>{h.exports=_jsx_runtime});var B={};y(B,{default:()=>T,frontmatter:()=>N});var e=k(d()),N={title:\"Benchmarks\",description:\"Performance tests and comparisons.\"};function x(t={}){let{wrapper:a}=t.components||{};return a?(0,e.jsx)(a,Object.assign({},t,{children:(0,e.jsx)(i,{})})):i();function i(){let n=Object.assign({h2:\"h2\",p:\"p\",a:\"a\",code:\"code\",h3:\"h3\",blockquote:\"blockquote\",hr:\"hr\",ul:\"ul\",li:\"li\"},t.components),{BenchmarkChartNative:r,BenchmarkChart:o,Notice:m}=n;return o||c(\"BenchmarkChart\",!0),r||c(\"BenchmarkChartNative\",!0),m||c(\"Notice\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h2,{id:\"native\",children:\"Native\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"In \",(0,e.jsx)(n.a,{href:\"https://github.com/tamagui/tamagui/blob/master/starters/benchmark/README.md\",children:\"this benchmark\"}),\" Tamagui is within 10% of the speed of vanilla React Native, even when using nearly all of it's features. We render list of 28 items with a few sections, text and images. Average of 5 runs on a Apple M2 Air:\"]}),`\n`,(0,e.jsx)(r,{}),`\n`,(0,e.jsxs)(n.p,{children:[\"Running Tamagui without the compiler averages \",(0,e.jsx)(n.code,{children:\"125ms\"}),\" or ~12% slower. Note that the compiler is much more effective on the web as it turns many more props into CSS and both bundle size and render performance are more important.\"]}),`\n`,(0,e.jsx)(n.h2,{id:\"web\",children:\"Web\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"We forked and ran a few mico \",(0,e.jsx)(n.a,{href:\"https://github.com/tamagui/benchmarks\",children:\"benchmarks\"}),\" on web.\"]}),`\n`,(0,e.jsx)(n.h3,{id:\"simple-component\",children:\"Simple component\"}),`\n`,(0,e.jsx)(n.p,{children:\"Timing rendering a simple custom component.\"}),`\n`,(0,e.jsx)(o,{data:[{name:\"Tamagui\",value:.018},{name:\"Native\",value:.057},{name:\"NativeBase\",value:.67},{name:\"Dripsy\",value:.042}]}),`\n`,(0,e.jsx)(n.h3,{id:\"updating-variants\",children:\"Updating variants\"}),`\n`,(0,e.jsx)(n.p,{children:\"Changing variants is fast at runtime, and even faster when compiled:\"}),`\n`,(0,e.jsx)(o,{data:[{name:\"Tamagui\",value:.02},{name:\"Native\",value:.063},{name:\"NativeBase\",value:.73},{name:\"Dripsy\",value:.108}]}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Since styled-components and Emotion don't offer a first-class variant API, this was done via prop interpolation.\"}),`\n`]}),`\n`,(0,e.jsx)(n.h3,{id:\"updating-inline-styles\",children:\"Updating inline styles\"}),`\n`,(0,e.jsx)(n.p,{children:\"Tamagui has a big advantage for inline styles, it's the only library to compile them and flatten the tree.\"}),`\n`,(0,e.jsx)(o,{data:[{name:\"Tamagui\",value:.025},{name:\"Native\",value:.06},{name:\"NativeBase\",value:.8},{name:\"Dripsy\",value:.266}]}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.h3,{id:\"dynamic-styles-no-compilation\",children:\"Dynamic styles (no compilation)\"}),`\n`,(0,e.jsx)(m,{children:(0,e.jsx)(n.p,{children:`React Native compatible components are far more feature-rich than web-only, and these next two\ntests show a really extreme case where nothing can be optimized. We left them in to be up-front,\nbut don't think they represent anywhere near a common use case.`})}),`\n`,(0,e.jsx)(o,{data:[{name:\"Tamagui\",value:31},{name:\"Dripsy\",value:57.5}]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"NativeBase - couldn't get running\"}),`\n`]}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Note: This test was taken from the \",(0,e.jsx)(n.a,{href:\"https://github.com/styled-components/styled-components/tree/main/packages/benchmarks\",children:\"styled-components benchmarks\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h3,{id:\"mounting-deep-tree\",children:\"Mounting deep tree\"}),`\n`,(0,e.jsx)(n.p,{children:\"In this test, we mount a tree with many nested nodes.\"}),`\n`,(0,e.jsx)(o,{data:[{name:\"Tamagui\",value:18.61},{name:\"Dripsy\",value:44.43}]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"NativeBase - couldn't get running\"}),`\n`]}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsxs)(n.p,{children:[\"Note: This test was taken from the \",(0,e.jsx)(n.a,{href:\"https://github.com/styled-components/styled-components/tree/main/packages/benchmarks\",children:\"styled-components benchmarks\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{id:\"summary\",children:\"Summary\"}),`\n`,(0,e.jsx)(n.p,{children:\"Tamagui greatly increases render performance and even beats most of the fastest web-only style libraries.\"})]})}}var T=x;function c(t,a){throw new Error(\"Expected \"+(a?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return w(B);})();\n;return Component;"},"__N_SSG":true}